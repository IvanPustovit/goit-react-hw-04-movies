{"version":3,"sources":["utils/apiRequest.js","component/MovieDetailsPage/MovieDetailsPage.js"],"names":["ApiKey","axios","defaults","baseURL","fetchHomePage","a","get","then","res","data","results","fetchMovieDetails","id","fetchCast","fetchReviews","fetchMoviesSearch","query","activeStyle","color","Cast","lazy","Reviews","MovieDetailsPage","props","useState","movieDetails","setMovieDetails","movieId","match","params","useEffect","onClick","state","location","history","push","from","pathname","routes","HOME","search","src","poster_path","alt","title","vote_average","overview","status","to","exact","fallback","path","MOVIE_CAST","component","MOVIE_REVIEWS"],"mappings":"iTAEMA,EAAS,mCACfC,IAAMC,SAASC,QAAU,+BAElB,IAAMC,EAAa,uCAAG,sBAAAC,EAAA,sEACdJ,IACVK,IADU,uCAC0BN,IACpCO,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAKC,WAHC,mFAAH,qDAMbC,EAAoB,SAACC,GAChC,OAAOX,IAAMK,IAAN,iBAAoBM,EAApB,oBAAkCZ,IAAUO,MAAK,SAACC,GAAD,OAASA,EAAIC,SAG1DI,EAAY,SAACD,GACxB,OAAOX,IACJK,IADI,iBACUM,EADV,4BACgCZ,IACpCO,MAAK,SAACC,GAAD,OAASA,EAAIC,SAGVK,EAAe,SAACF,GAC3B,OAAOX,IACJK,IADI,iBACUM,EADV,4BACgCZ,IACpCO,MAAK,SAACC,GAAD,OAASA,EAAIC,SAGVM,EAAoB,SAACC,GAChC,OAAOf,IACJK,IADI,gCACyBN,EADzB,kBACyCgB,IAC7CT,MAAK,SAACC,GAAD,OAASA,EAAIC,U,gGCzBjBQ,EAAc,CAClBC,MAAO,SAGHC,EAAOC,gBAAK,kBAAM,gCAClBC,EAAUD,gBAAK,kBAAM,gCAmFZE,UAjFU,SAACC,GAAW,IAAD,EACMC,mBAAS,IADf,mBAC3BC,EAD2B,KACbC,EADa,KAG5BC,EAAUJ,EAAMK,MAAMC,OAAOF,QACnCG,qBAAU,WACRnB,YAAkBgB,GAASpB,MAAK,SAACC,GAC/BkB,EAAgBlB,QAEjB,CAACmB,IAcJ,OACE,6BACE,4BAAQI,QAdS,WAAO,IAClBC,EAAUT,EAAMU,SAAhBD,MACJA,EACFT,EAAMW,QAAQC,KAAKH,EAAMI,MAG3Bb,EAAMW,QAAQC,KAAK,CACjBE,SAAUC,IAAOC,KACjBC,OAAO,OAMP,WACA,6BACE,yBACEC,IAAG,0CAAqChB,EAAaiB,aACrDC,IAAKlB,EAAamB,QAEpB,4BAAKnB,EAAamB,OAClB,0CAAgBnB,EAAaoB,cAC7B,wCACA,2BAAIpB,EAAaqB,UACjB,sCACA,2BAAIrB,EAAasB,SAEnB,6BACE,qDACA,4BACE,4BACE,kBAAC,IAAD,CACEC,GAAI,CACFX,SAAS,WAAD,OAAaV,EAAb,SACRK,MAAO,CAAEI,KAAMb,EAAMU,SAASD,MAAMI,OAEtCa,OAAK,EACLhC,YAAaA,GANf,SAWF,4BACE,kBAAC,IAAD,CACE+B,GAAI,CACFX,SAAS,WAAD,OAAaV,EAAb,YACRK,MAAO,CAAEI,KAAMb,EAAMU,SAASD,MAAMI,OAEtCnB,YAAaA,GALf,cAYN,kBAAC,WAAD,CAAUiC,SAAU,0CAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,KAAI,UAAK5B,EAAMK,MAAMuB,MAAjB,OAAwBb,IAAOc,YACnCC,UAAWlC,IAEb,kBAAC,IAAD,CACEgC,KAAI,UAAK5B,EAAMK,MAAMuB,MAAjB,OAAwBb,IAAOgB,eACnCD,UAAWhC","file":"static/js/6.59e06fb3.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst ApiKey = \"d9f8ae7b9574459eeae778ce17dfe5fd\";\r\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\";\r\n\r\nexport const fetchHomePage = async () => {\r\n  return await axios\r\n    .get(`/trending/movie/week?api_key=${ApiKey}`)\r\n    .then((res) => res.data.results);\r\n};\r\n\r\nexport const fetchMovieDetails = (id) => {\r\n  return axios.get(`/movie/${id}?api_key=${ApiKey}`).then((res) => res.data);\r\n};\r\n\r\nexport const fetchCast = (id) => {\r\n  return axios\r\n    .get(`/movie/${id}/credits?api_key=${ApiKey}`)\r\n    .then((res) => res.data);\r\n};\r\n\r\nexport const fetchReviews = (id) => {\r\n  return axios\r\n    .get(`/movie/${id}/reviews?api_key=${ApiKey}`)\r\n    .then((res) => res.data);\r\n};\r\n\r\nexport const fetchMoviesSearch = (query) => {\r\n  return axios\r\n    .get(`/search/movie?api_key=${ApiKey}&query=${query}`)\r\n    .then((res) => res.data);\r\n};\r\n","import React, { useState, useEffect, lazy, Suspense } from \"react\";\r\nimport { fetchMovieDetails } from \"../../utils/apiRequest\";\r\nimport { NavLink, Route, Switch } from \"react-router-dom\";\r\nimport { routes } from \"../../utils/routes\";\r\n\r\nconst activeStyle = {\r\n  color: \"brown\",\r\n};\r\n\r\nconst Cast = lazy(() => import(\"../Cast/Cast\"));\r\nconst Reviews = lazy(() => import(\"../Reviews/Reviews\"));\r\n\r\nconst MovieDetailsPage = (props) => {\r\n  const [movieDetails, setMovieDetails] = useState({});\r\n\r\n  const movieId = props.match.params.movieId;\r\n  useEffect(() => {\r\n    fetchMovieDetails(movieId).then((res) => {\r\n      setMovieDetails(res);\r\n    });\r\n  }, [movieId]);\r\n\r\n  const handleGoBack = () => {\r\n    const { state } = props.location;\r\n    if (state) {\r\n      props.history.push(state.from);\r\n      return;\r\n    }\r\n    props.history.push({\r\n      pathname: routes.HOME,\r\n      search: ``,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={handleGoBack}>Go back</button>\r\n      <div>\r\n        <img\r\n          src={`https://image.tmdb.org/t/p/w500/${movieDetails.poster_path}`}\r\n          alt={movieDetails.title}\r\n        />\r\n        <h2>{movieDetails.title}</h2>\r\n        <p>User score: {movieDetails.vote_average}</p>\r\n        <h3>Overview</h3>\r\n        <p>{movieDetails.overview}</p>\r\n        <h3>Genres</h3>\r\n        <p>{movieDetails.status}</p>\r\n      </div>\r\n      <div>\r\n        <p>Additional information</p>\r\n        <ul>\r\n          <li>\r\n            <NavLink\r\n              to={{\r\n                pathname: `/movies/${movieId}/cast`,\r\n                state: { from: props.location.state.from },\r\n              }}\r\n              exact\r\n              activeStyle={activeStyle}\r\n            >\r\n              Cast\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink\r\n              to={{\r\n                pathname: `/movies/${movieId}/reviews`,\r\n                state: { from: props.location.state.from },\r\n              }}\r\n              activeStyle={activeStyle}\r\n            >\r\n              Reviews\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <Suspense fallback={<p>...Loading</p>}>\r\n        <Switch>\r\n          <Route\r\n            path={`${props.match.path}${routes.MOVIE_CAST}`}\r\n            component={Cast}\r\n          />\r\n          <Route\r\n            path={`${props.match.path}${routes.MOVIE_REVIEWS}`}\r\n            component={Reviews}\r\n          />\r\n        </Switch>\r\n      </Suspense>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieDetailsPage;\r\n"],"sourceRoot":""}