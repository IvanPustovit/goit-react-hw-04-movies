{"version":3,"sources":["component/Reviews/Reviews.js"],"names":["Reviews","props","useState","reviews","setReviews","error","setError","movieId","match","params","useEffect","fetchReviews","then","res","results","catch","map","id","author","content","key"],"mappings":"qIA4BeA,UAzBC,SAACC,GAAW,IAAD,EACKC,mBAAS,IADd,mBAClBC,EADkB,KACTC,EADS,OAECF,mBAAS,IAFV,mBAElBG,EAFkB,KAEXC,EAFW,KAInBC,EAAUN,EAAMO,MAAMC,OAAOF,QAQnC,OANAG,qBAAU,WACRC,YAAaJ,GACVK,MAAK,SAACC,GAAD,OAAST,EAAWS,EAAIC,YAC7BC,OAAM,SAACV,GAAD,OAAWC,EAASD,QAC5B,CAACE,IAGF,6BACGF,GAAS,4DACTF,EAAQa,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,yBAAKC,IAAKH,GACR,4BAAKC,GACL,2BAAIC","file":"static/js/9.44984fbe.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { fetchReviews } from \"../../utils/apiRequest\";\r\n\r\nconst Reviews = (props) => {\r\n  const [reviews, setReviews] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const movieId = props.match.params.movieId;\r\n\r\n  useEffect(() => {\r\n    fetchReviews(movieId)\r\n      .then((res) => setReviews(res.results))\r\n      .catch((error) => setError(error));\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <div>\r\n      {error && <>Something went wrong</>}\r\n      {reviews.map(({ id, author, content }) => (\r\n        <div key={id}>\r\n          <h3>{author}</h3>\r\n          <p>{content}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reviews;\r\n"],"sourceRoot":""}